apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: {{ default $.Release.Name $.Values.nameOverride }}
    service: web-server
  name: {{ default $.Release.Name $.Values.nameOverride }}-web
spec:
  replicas: {{ default "1" .Values.web.replicaCount }}
  revisionHistoryLimit: {{ default "2" .Values.web.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ default $.Release.Name $.Values.nameOverride }}
      service: web-server
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ default $.Release.Name $.Values.nameOverride }}
        service: web-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ default $.Release.Name $.Values.nameOverride }}
              - key: service
                operator: In
                values:
                - web-server
            topologyKey: "kubernetes.io/hostname"
      containers:
        - image: {{ .Values.images.web.repository }}:{{ default .Values.version_tag .Values.images.web.tag }}
          name: web-server
          ports:
            - name: 'http'
              containerPort: 3000
              protocol: TCP
          env:
            - name: INTERNAL_URL
              value: http://{{ default $.Release.Name $.Values.nameOverride }}-api-svc:80

            # PSQL config
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
          envFrom:
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-global
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-auth
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-web
{{- if .Values.web.resources }}
          resources: {{ toYaml (.Values.web.resources) | nindent 12 }}
{{- end }}
      restartPolicy: Always
{{- if .Values.web.tolerations }}
      tolerations: {{ toYaml (.Values.web.tolerations) | nindent 8 }}
{{- end }}
