apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    app: {{ default $.Release.Name $.Values.nameOverride }}
    service: api-server
  name: {{ default $.Release.Name $.Values.nameOverride }}-api
spec:
  replicas: {{ default "1" .Values.api.replicaCount }}
  revisionHistoryLimit: {{ default "2" .Values.api.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ default $.Release.Name $.Values.nameOverride }}
      service: api-server
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/hotpatch: {{ include (print $.Template.BasePath "/onyx-hotpatch.yaml") . | sha256sum }}
      labels:
        app: {{ default $.Release.Name $.Values.nameOverride }}
        service: api-server
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ default $.Release.Name $.Values.nameOverride }}
              - key: service
                operator: In
                values:
                - api-server
            topologyKey: "kubernetes.io/hostname"
      containers:
        - image: {{ .Values.images.backend.repository }}:{{ default .Values.version_tag .Values.images.backend.tag }}
          name: api-server
          command: ["/usr/bin/bash", "/hotpatch/entrypoint.sh"]
          args:
            - /bin/sh
            - -c
            - alembic upgrade head && echo "Starting Onyx Api Server" && uvicorn onyx.main:app --host 0.0.0.0 --port 8080
          ports:
            - name: 'http'
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            periodSeconds: 15
            initialDelaySeconds: 15
            httpGet:
              path: /health
              port: 8080
          livenessProbe:
            periodSeconds: 15
            initialDelaySeconds: 15
            httpGet:
              path: /health
              port: 8080
          env:
            - name: MODEL_SERVER_HOST
              value: {{ default $.Release.Name $.Values.nameOverride }}-inference-svc
            - name: MODEL_SERVER_PORT
              value: "80"

            # PSQL config
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: dbname
                  name: {{ default $.Release.Name $.Values.nameOverride }}-cnpg-app

            - name: REDIS_HOST
              value: {{ default $.Release.Name $.Values.nameOverride }}-redis-master
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default $.Release.Name $.Values.nameOverride }}-redis
                  key: redis-password
          envFrom:
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-global
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-auth
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-vespa
            - configMapRef:
                name: {{ default $.Release.Name $.Values.nameOverride }}-web
          volumeMounts:
            - name: hotpatch
              mountPath: /hotpatch
{{- if .Values.api.resources }}
          resources: {{ toYaml (.Values.api.resources) | nindent 12 }}
{{- end }}
      restartPolicy: Always
      volumes:
        - name: hotpatch
          configMap:
            name: {{ default $.Release.Name $.Values.nameOverride }}-hotpatch
{{- if .Values.api.tolerations }}
      tolerations: {{ toYaml (.Values.api.tolerations) | nindent 8 }}
{{- end }}
