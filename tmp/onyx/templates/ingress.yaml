{{- if ne $.Values.ingress.enabled false }}
{{- $ingressAnnotations := default (dict) $.Values.ingress.annotations -}}
{{- if .Capabilities.APIVersions.Has "traefik.io/v1alpha1/Middleware" -}}
{{- $ingressAnnotations := merge $ingressAnnotations (dict "traefik.ingress.kubernetes.io/router.middlewares" (printf "%s-strip-apiprefix@kubernetescrd" $.Release.Name)) -}}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-apiprefix
spec:
  stripPrefix:
    prefixes:
      - "/api"
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{- if gt (len $ingressAnnotations) 0 }}
  annotations: {{ toYaml $ingressAnnotations | nindent 4 }}
{{- end }}
  labels:
    app: {{ default $.Release.Name $.Values.nameOverride }}
  name: {{ default $.Release.Name $.Values.nameOverride }}-external
spec:
  ingressClassName: {{ $.Values.ingress.ingressClassName }}
  rules:
    - http:
        paths:
          - backend:
              service:
                name: {{ default $.Release.Name $.Values.nameOverride }}-api-svc
                port:
                  number: 80
            path: /api
            pathType: Prefix
          - backend:
              service:
                name: {{ default $.Release.Name $.Values.nameOverride }}-web-svc
                port:
                  number: 80
            path: /
            pathType: Prefix
{{- if $.Values.ingress.hostname }}
      host: {{ $.Values.ingress.hostname }}
{{- end }}
{{- if and $.Values.ingress.tls $.Values.ingress.hostname }}
  tls:
    {{- if $.Values.ingress.tls }}
    - hosts:
      - {{ $.Values.ingress.hostname }}
      secretName: {{ default $.Release.Name $.Values.nameOverride }}-tls
    {{- end }}
{{- end }}
{{- end }}
